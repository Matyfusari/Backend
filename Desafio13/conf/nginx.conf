
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;


    upstream node_randoms {
            server 127.0.0.1:8082;
            server 127.0.0.1:8083;
            server 127.0.0.1:8084;
            server 127.0.0.1:8085;
    }

    # Usado para la escucha en el puerto 8081 modo CLUSTER
    # node server.js -p 8081 -m CLUSTER
    # upstream node_random{
    #        server 127.0.0.1:8081;
    # }

    # Resto de consultas en FORK usando: node server.js -p 8080 -m FORK รณ node server.js
    upstream node_app {
            server 127.0.0.1:8080;
    }

    server {
        listen       8080;
        server_name  localhost;

        location / {
            proxy_pass http://node_app; 
        }

        location /randoms {
            proxy_pass http://node_randoms; 
        }
    }
}
